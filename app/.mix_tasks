absinthe.plug.graphiql.assets.download:Download GraphiQL assets
absinthe.plug.graphiql.assets.remove:Removes GraphiQL assets
absinthe.schema.json:Generate a schema.json file for an Absinthe schema
absinthe.schema.sdl:Generate a schema.graphql file for an Absinthe schema
app.config:Configures all registered apps
app.start:Starts all registered apps
app.tree:Prints the application tree
archive:Lists installed archives
archive.build:Archives this project into a .ez file
archive.install:Installs an archive locally
archive.uninstall:Uninstalls archives
assets.build:Builds static assets
assets.install:Find and install JavaScript dependencies
clean:Deletes generated application files
cmd:Executes the given command
compile:Compiles source files
credo:Run code analysis (use `--help` for options)
credo.gen.check:Generate a new custom check for Credo
credo.gen.config:Generate a new config for Credo
deps:Lists dependencies and their status
deps.clean:Deletes the given dependencies' files
deps.compile:Compiles dependencies
deps.get:Gets all out of date dependencies
deps.tree:Prints the dependency tree
deps.unlock:Unlocks the given dependencies
deps.update:Updates the given dependencies
do:Executes the tasks separated by comma
ecto:Prints Ecto help information
ecto.create:Creates the repository storage
ecto.drop:Drops the repository storage
ecto.dump:Dumps the repository database structure
ecto.gen.migration:Generates a new migration for the repo
ecto.gen.repo:Generates a new repository
ecto.load:Loads previously dumped database structure
ecto.migrate:Runs the repository migrations
ecto.migrations:Displays the repository migration status
ecto.reset:Alias defined in mix.exs
ecto.rollback:Rolls back the repository migrations
ecto.setup:Alias defined in mix.exs
escript:Lists installed escripts
escript.build:Builds an escript for the project
escript.install:Installs an escript locally
escript.uninstall:Uninstalls escripts
format:Formats the given files/patterns
gettext.extract:Extracts translations from source code
gettext.merge:Merge template files into translation files
help:Prints help information for tasks
hex:Prints Hex help information
hex.audit:Shows retired Hex deps for the current project
hex.build:Builds a new package version locally
hex.config:Reads, updates or deletes local Hex config
hex.docs:Fetches or opens documentation of a package
hex.info:Prints Hex information
hex.organization:Manages Hex.pm organizations
hex.outdated:Shows outdated Hex deps for the current project
hex.owner:Manages Hex package ownership
hex.package:Fetches or diffs packages
hex.publish:Publishes a new package version
hex.registry:Manages local Hex registries
hex.repo:Manages Hex repositories
hex.retire:Retires a package version
hex.search:Searches for package names
hex.sponsor:Show Hex packages accepting sponsorships
hex.user:Manages your Hex user account
honeybadger.test:Verify your hex package installation by sending a test exception to the honeybadger service
loadconfig:Loads and persists the given configuration
local:Lists local tasks
local.hex:Installs Hex locally
local.public_keys:Manages public keys
local.rebar:Installs Rebar locally
meadow.buckets.create:Create all configured S3 buckets
meadow.elasticsearch.clear:Clear the elasticsearch meadow and shared_links indices
meadow.elasticsearch.setup:Build elasticsearch index for the dev environment if it does not exist
meadow.ldap.setup:Add LDAP entries specified in LDIF file(s)
meadow.ldap.teardown:Delete LDAP entries specified in LDIF file(s)
meadow.pipeline.purge:Purges messages from all ingest pipeline queues
meadow.pipeline.setup:Creates resources for the ingest pipeline
meadow.reset:Clear out meadow database, indices, and queues
meadow.seed.export:Export images and data from Meadow to an S3 bucket
meadow.seed.import:Import images and data from Meadow from an S3 bucket or a directory on disk
meadow.setup:Alias defined in mix.exs
meadow.version:Update mix.exs with the given semantic version string
new:Creates a new Elixir project
nimble_parsec.compile:Compiles a parser and injects its content into the parser file
nul_authorities.clear:Clear NUL Authorities
nul_authorities.retrieve:Retrieve NUL Authorities from Elasticsearch
phx:Prints Phoenix help information
phx.digest:Digests and compresses static files
phx.digest.clean:Removes old versions of static assets.
phx.gen:Lists all available Phoenix generators
phx.gen.auth:Generates authentication logic for a resource
phx.gen.cert:Generates a self-signed certificate for HTTPS testing
phx.gen.channel:Generates a Phoenix channel
phx.gen.context:Generates a context with functions around an Ecto schema
phx.gen.embedded:Generates an embedded Ecto schema file
phx.gen.html:Generates controller, views, and context for an HTML resource
phx.gen.json:Generates controller, views, and context for a JSON resource
phx.gen.live:Generates LiveView, templates, and context for a resource
phx.gen.notifier:Generates a notifier that delivers emails by default
phx.gen.presence:Generates a Presence tracker
phx.gen.release:Generates release files and optional Dockerfile for release-based deployments
phx.gen.schema:Generates an Ecto schema and migration file
phx.gen.secret:Generates a secret
phx.gen.socket:Generates a Phoenix socket handler
phx.routes:Prints all routes
phx.server:Starts applications and their servers
profile.cprof:Profiles the given file or expression with cprof
profile.eprof:Profiles the given file or expression with eprof
profile.fprof:Profiles the given file or expression with fprof
release:Assembles a self-contained release
release.init:Generates sample files for releases
run:Starts and runs the current application
sitemap.generate:Generate and upload Digital Collections sitemaps
test:Runs a project's tests
test.coverage:Build report from exported test coverage
xref:Prints cross reference information
