---
name: Meadow Tests
on:
  push:
    branches-ignore:
      - "main"
      - "deploy/**"
      - "build/**"
jobs:
  dependencies:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: asdf-vm/actions/setup@v1
      - name: Install NodeJS
        run: |
          asdf plugin add nodejs
          asdf install nodejs
          for node_version in $(cat .tool-versions | grep nodejs | awk '{print $2}'); do
            ASDF_NODEJS_VERSION=$node_version npm install -g npm@$(cat .tool-versions | grep npm | awk '{print $2}')
          done
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25"
          elixir-version: "1.14.2"
      - name: Cache Elixir dependencies
        uses: actions/cache@v2
        with:
          path: |
            app/deps
            app/_build
          key: ${{ runner.os }}-hex-v6-${{ hashFiles('app/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-hex-v6-${{ hashFiles('app/mix.lock') }}
            ${{ runner.os }}-hex-v6-
      - name: Cache JS dependencies
        uses: actions/cache@v2
        with:
          path: |
            app/assets/node_modules
            app/priv/nodejs/*/node_modules
            lambdas/*/node_modules
          key: ${{ runner.os }}-npm-v6-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-v6-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-npm-v6-
      - name: Install Elixir dependencies
        run: mix do deps.get, deps.compile --force mime, deps.compile
        working-directory: app
      - name: Install JS dependencies
        run: npm install --no-fund
        working-directory: app/assets
      - name: Install Lambda dependencies
        run: |
          for pkg in $(find app/priv/nodejs -maxdepth 2 -name package-lock.json) $(find lambdas -maxdepth 2 -name package-lock.json)
          do
            cd $(dirname $pkg)
            npm install --no-fund
            cd -
          done
  js-test:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v2
      - uses: asdf-vm/actions/setup@v1
      - name: Install NodeJS
        run: |
          asdf plugin add nodejs
          asdf install nodejs
          for node_version in $(cat .tool-versions | grep nodejs | awk '{print $2}'); do
            ASDF_NODEJS_VERSION=$node_version npm install -g npm@$(cat .tool-versions | grep npm | awk '{print $2}')
          done
      - name: Cache Elixir dependencies
        uses: actions/cache@v2
        with:
          path: |
            app/deps
            app/_build
          key: ${{ runner.os }}-hex-v6-${{ hashFiles('app/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-hex-v6-${{ hashFiles('app/mix.lock') }}
            ${{ runner.os }}-hex-v6-
      - name: Cache JS dependencies
        uses: actions/cache@v2
        with:
          path: |
            app/assets/node_modules
            app/priv/nodejs/*/node_modules
            lambdas/*/node_modules
          key: ${{ runner.os }}-npm-v6-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-v6-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-npm-v6-
      - name: JS Static Analysis
        run: npm run-script prettier
        working-directory: app/assets
      - name: JS Tests
        run: npm run-script ci:silent -- -w 1
        working-directory: app/assets
      - name: Test Webpack Build
        run: npm run-script deploy
        working-directory: app/assets
  elixir-test:
    runs-on: ubuntu-latest
    needs: dependencies
    env:
      EXIFTOOL_VERSION: 12.56
      MIX_ENV: test
    services:
      ldap:
        image: ghcr.io/nulib/ldap-alpine
        ports:
          - 391:389
          - 638:636
      localstack:
        image: localstack/localstack-pro
        env:
          DNS_ADDRESS: 127.0.0.1
          LAMBDA_EXECUTOR: local
          LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }}
        ports:
          - 4510-4559:4510-4559
          - 4566:4566
          - 4571:4571
          - 12121:12121
    steps:
      - uses: actions/checkout@v2
      - name: Provision Localstack using Cloud Pod
        run: |
          pip install localstack
          curl -O https://nul-public.s3.amazonaws.com/meadow/test/localstack.pod
          localstack pod load file://$PWD/localstack.pod
      - uses: asdf-vm/actions/setup@v1
      - name: Install NodeJS
        run: |
          asdf plugin add nodejs
          asdf install nodejs
          for node_version in $(cat .tool-versions | grep nodejs | awk '{print $2}'); do
            ASDF_NODEJS_VERSION=$node_version npm install -g npm@$(cat .tool-versions | grep npm | awk '{print $2}')
          done
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25"
          elixir-version: "1.14.2"
      - name: Install LDAP utils
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ldap-utils
      - name: Install FFMPEG
        run: |
          mkdir -p ${{ runner.temp }}/ffmpeg && \
          cd ${{ runner.temp }}/ffmpeg && \
          curl https://s3.amazonaws.com/nul-repo-deploy/ffmpeg-release-64bit-static.tar.xz | tar xJ && \
          sudo cp $(find . -type f -executable) /usr/local/bin/ && \
          echo "FFMPEG VERSION: $(ffmpeg -version | sed -n "s/ffmpeg version \([-0-9.]*\).*/\1/p;")"
      - name: Install ExifTool
        run: |
          mkdir -p ${{ runner.temp }}/exiftool && \
          cd ${{ runner.temp }}/exiftool && \
          curl -L -s https://exiftool.org/Image-ExifTool-${EXIFTOOL_VERSION}.tar.gz | tar xz && \
          cd Image-ExifTool-${EXIFTOOL_VERSION} && \
          perl Makefile.PL && \
          sudo make install
        env:
          EXIFTOOL_VERSION: ${{ env.EXIFTOOL_VERSION }}
      - name: Cache Elixir dependencies
        uses: actions/cache@v2
        with:
          path: |
            app/deps
            app/_build
          key: ${{ runner.os }}-hex-v6-${{ hashFiles('app/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-hex-v6-${{ hashFiles('app/mix.lock') }}
            ${{ runner.os }}-hex-v6-
      - name: Cache JS dependencies
        uses: actions/cache@v2
        with:
          path: |
            app/assets/node_modules
            app/priv/nodejs/*/node_modules
            lambdas/*/node_modules
          key: ${{ runner.os }}-npm-v6-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-v6-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-npm-v6-
      - name: Force compile MIME just in case
        run: mix deps.compile --force mime
        working-directory: app
      - name: Elixir Static Analysis
        run: mix credo
        working-directory: app
      - name: Elixir Tests
        run: mix test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: app
      - name: Test DB Rollback
        run: mix ecto.rollback --all
        working-directory: app
