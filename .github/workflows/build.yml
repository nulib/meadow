---
name: meadow-test
on: [push]
jobs:
  dependencies:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '24'
          elixir-version: '1.12.1'
      - name: Cache Elixir dependencies
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-hex-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-hex-${{ hashFiles('mix.lock') }}
            ${{ runner.os }}-hex-
      - name: Cache Elixir build
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('mix.lock') }}
            ${{ runner.os }}-build-
      - name: Cache JS dependencies
        uses: actions/cache@v2
        with:
          path: |
            assets/node_modules
            priv/nodejs/*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-${{ hashFiles ('priv/nodejs/*/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-${{ hashFiles ('priv/nodejs/*/yarn.lock') }}
            ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-
            ${{ runner.os }}-yarn-
      - name: Install Elixir dependencies
        run: mix do deps.get, deps.compile
      - name: Install JS dependencies
        run: yarn install --cwd assets
      - name: Install Lambda dependencies
        run: |
          for pkg in $(find priv/nodejs -maxdepth 2 -name yarn.lock)
          do
            echo "yarn install --cwd $(dirname $pkg)"
            yarn install --cwd $(dirname $pkg)
          done
  js-test:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache Elixir dependencies
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-hex-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-hex-${{ hashFiles('mix.lock') }}
            ${{ runner.os }}-hex-
      - name: Cache Elixir build
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('mix.lock') }}
            ${{ runner.os }}-build-
      - name: Cache JS dependencies
        uses: actions/cache@v2
        with:
          path: |
            assets/node_modules
            priv/nodejs/*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-${{ hashFiles ('priv/nodejs/*/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-${{ hashFiles ('priv/nodejs/*/yarn.lock') }}
            ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-
            ${{ runner.os }}-yarn-
      - name: JS Static Analysis
        run: yarn prettier
        working-directory: assets
      - name: JS Tests
        run: yarn ci -w 1
        working-directory: assets
      - name: Test Webpack Build
        run: yarn deploy
        working-directory: assets
  elixir-test:
    runs-on: ubuntu-latest
    needs: dependencies
    env:
      MIX_ENV: test
    services:
      db:
        image: postgres:10-alpine
        env:
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: d0ck3r
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432
      goaws:
        image: nulib/goaws
        ports:
          - 4102:4100
      ldap:
        image: nulib/ldap-alpine
        ports:
          - 391:389
          - 638:636
      elasticsearch:
        image: bitnami/elasticsearch:6
        env:
          ELASTICSEARCH_HEAP_SIZE: "256m"
        ports:
          - 9202:9200
      minio:
        image: bitnami/minio
        env:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123
        ports:
          - 9002:9000
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '24'
          elixir-version: '1.12.1'
      - name: Install LDAP utils
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ldap-utils
      - name: Install FFMPEG
        run: |
          mkdir -p /tmp/ffmpeg && \
          cd /tmp/ffmpeg && \
          curl https://s3.amazonaws.com/nul-repo-deploy/ffmpeg-release-64bit-static.tar.xz | tar xJ && \
          sudo cp $(find . -type f -executable) /usr/local/bin/ && \
          echo "FFMPEG VERSION: $(ffmpeg -version | sed -n "s/ffmpeg version \([-0-9.]*\).*/\1/p;")"
      - name: Cache Elixir dependencies
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-hex-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-hex-${{ hashFiles('mix.lock') }}
            ${{ runner.os }}-hex-
      - name: Cache Elixir build
        uses: actions/cache@v2
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('mix.lock') }}
            ${{ runner.os }}-build-
      - name: Cache JS dependencies
        uses: actions/cache@v2
        with:
          path: |
            assets/node_modules
            priv/nodejs/*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-${{ hashFiles ('priv/nodejs/*/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-${{ hashFiles ('priv/nodejs/*/yarn.lock') }}
            ${{ runner.os }}-yarn-${{ hashFiles('assets/yarn.lock') }}-
            ${{ runner.os }}-yarn-
      - name: Elixir Static Analysis
        run: mix credo
      - name: Elixir Tests
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test DB Rollback
        run: mix ecto.rollback --all
